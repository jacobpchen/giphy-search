[{"F:\\school\\TTP Bootcamp\\React-apps\\giphy-search\\src\\index.js":"1","F:\\school\\TTP Bootcamp\\React-apps\\giphy-search\\src\\App.js":"2","F:\\school\\TTP Bootcamp\\React-apps\\giphy-search\\src\\reportWebVitals.js":"3","F:\\school\\TTP Bootcamp\\React-apps\\giphy-search\\src\\components\\Trending.js":"4","F:\\school\\TTP Bootcamp\\React-apps\\giphy-search\\src\\components\\GifCard.js":"5","F:\\school\\TTP Bootcamp\\React-apps\\giphy-search\\src\\components\\SearchGif.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":392,"mtime":1610647935555,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":2658,"mtime":1610647935560,"results":"11","hashOfConfig":"8"},{"size":332,"mtime":1610647935557,"results":"12","hashOfConfig":"8"},{"size":1662,"mtime":1610647935559,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1l4tf5x",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"F:\\school\\TTP Bootcamp\\React-apps\\giphy-search\\src\\index.js",[],["29","30"],"F:\\school\\TTP Bootcamp\\React-apps\\giphy-search\\src\\App.js",["31"],"F:\\school\\TTP Bootcamp\\React-apps\\giphy-search\\src\\reportWebVitals.js",[],"F:\\school\\TTP Bootcamp\\React-apps\\giphy-search\\src\\components\\Trending.js",["32"],"import React from 'react'\r\nimport axios from \"axios\"\r\nimport GifCard from './GifCard'\r\n\r\nclass Trending extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            trendingUrl: [],\r\n            key: '',\r\n            randomGif: [],\r\n            url: 'https://api.giphy.com/v1/gifs/trending?api_key=rdUagZZZB6SBGDtOIGrzFOVBiDLCc94P'\r\n        }\r\n    }\r\n\r\n    // on mount do an API call to get the trending gifs and load it.\r\n    componentDidMount() {\r\n        axios.get('https://api.giphy.com/v1/gifs/trending?api_key=rdUagZZZB6SBGDtOIGrzFOVBiDLCc94P&limit=25&rating=g')\r\n            .then(response => {\r\n                let apiResponse = response.data\r\n                apiResponse = Array.from(apiResponse.data)\r\n                this.setState({\r\n                    trendingUrl: apiResponse\r\n                })\r\n            })\r\n    }\r\n\r\n    handleRandomButton = (e) => {\r\n        console.log(\"button worked\")\r\n        console.log(\"Before\")\r\n\r\n        axios.get('https://api.giphy.com/v1/gifs/random?api_key=rdUagZZZB6SBGDtOIGrzFOVBiDLCc94P&tag=&rating=g')\r\n            .then(response => {\r\n                let apiResponse = response.data\r\n                this.setState({\r\n                    randomGif: apiResponse,\r\n                })\r\n                console.log(\"After\")\r\n                console.log(this.state.randomGif)\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevProp, prevState) {\r\n        console.log(\"Printing from update\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"trending\">\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        onClick={(e) => this.handleRandomButton(e)}>\r\n                        Random Gif</button>\r\n                </div>\r\n\r\n                {<div className=\"random\">\r\n                    {console.log(\"Printing from return\")}\r\n                    <GifCard\r\n                        image={this.state.randomGif}\r\n                    />\r\n                </div>}\r\n\r\n                <h3 className=\"text-center p-5\">Trending GIFs</h3>\r\n                <div className=\"trending container d-flex flex-wrap align-items-center\">\r\n                    {this.state.trendingUrl.map(index =>\r\n                        <div key={index.id}\r\n                            className=\"p-2\" >\r\n                            <img src={index.images.fixed_height.url}></img>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Trending","F:\\school\\TTP Bootcamp\\React-apps\\giphy-search\\src\\components\\GifCard.js",[],"F:\\school\\TTP Bootcamp\\React-apps\\giphy-search\\src\\components\\SearchGif.js",["33"],"import React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport axios from \"axios\";\r\nimport \"./SearchGif.css\";\r\n\r\nclass SearchGif extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      gifs: [],\r\n      searchInput: \"\",\r\n      gifLink: \"http://api.giphy.com/v1/gifs/search?q=\",\r\n    };\r\n\r\n  }\r\n\r\n  setGif = () => {\r\n    axios.get(this.state.gifLink + this.state.searchInput + \"&api_key=rsSnDcswkLYJFsP5WFB0AMVxOcpVaDD7\")\r\n      .then(\r\n        response => {\r\n          let dataRes = response.data.data\r\n          console.log(dataRes)\r\n          this.setState({ gifs: dataRes }, this.printSearchGifs)\r\n      })\r\n      .catch((err) => console.log(err)) \r\n  }\r\n\r\n  printSearchGifs = () => {\r\n    let output = []\r\n    output = this.state.gifs.map(gvalue =>\r\n      <div className=\"gif-border\" >\r\n        <img className = \"gif-size\" src={gvalue.images.original.url} />\r\n      </div>)\r\n\r\n    let print = document.getElementsByClassName(\"results-output\")[0]\r\n    ReactDOM.render(output, print)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <div className = \"back\"> \r\n        <div>\r\n          <label >Search: </label>\r\n          <input className=\"search-prompt-line\" type = \"text\" \r\n          onChange={(event) => this.setState({ searchInput: event.target.value },)}\r\n          placeholder={this.state.searchInput}/>\r\n\r\n          <button className=\"button-search\"\r\n          onClick={() => {this.setGif()}}>\r\n            Go\r\n          </button>\r\n\r\n        </div>\r\n\r\n        <div>Search Results: </div>\r\n\r\n        <div className=\"results-output\"></div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchGif",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":4,"column":8,"nodeType":"40","messageId":"41","endLine":4,"endColumn":16},{"ruleId":"42","severity":1,"message":"43","line":70,"column":29,"nodeType":"44","endLine":70,"endColumn":70},{"ruleId":"42","severity":1,"message":"43","line":32,"column":9,"nodeType":"44","endLine":32,"endColumn":72},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'Trending' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]